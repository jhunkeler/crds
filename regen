# /bin/tcsh

# This script executes the myriad of steps used in importing
# information from CDBS in order to generate and test rmaps.  In
# theory this should probably be a make file,  in practice the output
# needs some review anyway.

# make sure CRDS_PATH is set up right for development
source env.csh  

# Regenerate the CDBS reference file map, basically a cache of the 
# /grp/hst/cdbs dir listing to use to find CDBS file paths fast.
echo ">>>>>>> Dumping CDBS file locations"  > /dev/stderr
(cd ../CRDS/hst; python locate.py)

# Reparse the CDBS .rule files into substituions.dat files
# for doing conditional header substitutions.
echo ">>>>>>> Generating substitutions.dat" > /dev/stderr
(cd ../CRDS/hst; python substitutions.py compileall)

# Process CDBS reference_file_defs.xml to extract information about when 
# reference files are relevant to a parameter set,  when particular parameters
# are relevant to a reference selection, what the relationship between FITS
# keywords and database column names is, etc.   i.e. regenerate parkeys.dat
echo ">>>>>>> Generating parkeys.dat" > /dev/stderr
(cd ../CRDS/hst; python parkeys.py)

# Re-install CRDS to capture the new .dat files from the above.
echo ">>>>>>> Installing CRDS" > /dev/stderr
../CRDS/install

# Regenerate rmaps, imaps, and pmaps.   
# Dump the DADSOPS dataset catalogs into pickles for testing consistent with
# the current rmaps;  the best refs in DADSOPS
echo ">>>>>>> Generating rmaps" > /dev/stderr
(./gen_rmaps >& gen_rmaps.out; grep -E 'error|warn' gen_rmaps.out)
echo ">>>>>>> Generating contexts" > /dev/stderr
(python gen_contexts.py >& gen_contexts.out; grep -E 'error|warn' gen_contexts.out)

# Examine cdbscatalog.dat to generate the maps relating filekinds,
# CDBS file suffixes, etc.  filekind_ext.dat and tpn_filetypes.dat
echo ">>>>>>> Generating filekind_ext.dat and tpn_filetypes.dat" > /dev/stderr
(cd ../CRDS/hst; python tpn.py hst.pmap)

# Re-install CRDS to capture the latest generated .dat files
echo ">>>>>>> Installing CRDS" > /dev/stderr
../CRDS/install

# Run the CRDS certifier on the new rmaps
echo ">>>>>>> Certifying all mappings" > /dev/stderr
(cd certify_logs; ./certify_all |& tee certify_all.log)

# Run comparison tests on all HST datasets.
echo ">>>>>>> Testing all datasets" > /dev/stderr
(./testall >& testall.err.1;  grep -E 'error|warn|datasets' testall.err.1 | grep -v -E 'MAST|pickle')

echo ">>>>>>> Moving stats files to ../stats" > /dev/stderr
mv *.stats ../stats

