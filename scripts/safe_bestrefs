#! /bin/sh
#
# usage:  safe_bestrefs  --files <dataset FITS...>  --update-bestrefs
#
#   options:  
#        --new-context [hst-operational | e.g. hst_0042.pmap] (optional, defaults hst-operational)
#        --files <FITS files to update...>
#        --update-bestrefs   (fill in FITS headers,  otherwise dry-run.)
#
#   requires:  
#        CRDS_PATH        (cache directory)
#        *not* CRDS_SERVER_URL  (safe_bestrefs clears this to be disconnected from CRDS servers)
#        CRDS_LOCKS       (locks directory,  defaults CRDS_PATH)
#
# This script is intended to be run in parallel with multiple pipeline bestrefs
# and a concurrent cron_sync.  The "safe" aspect refers to not modifying the
# CRDS cache itself, and to not stumbling into inconsistent cache states while
# another process is updating the cache.
#

#  To control when information is received from the server,  and to
#  prevent pipeline stall when the CRDS server is unavailable,
#  safe_bestrefs is configured with a bad server IP address.

#  To prevent multiple bestrefs or cron_sync from modifying the
#  cache config area,  it is chmod'ed to read-only.

#  To prevent multiple bestrefs from blocking one another,
#  they share crds.config.lock as a "read lock".

#  To prevent a pipeline stall on crds.config.lock in the
#  event the sync system fails,  safe_bestrefs only waits 3 
#  minutes on crds.config.lock and then proceeds anyway.

# Common code and settings between safe and unsafe_sync, safe_bestrefs
. crds_sync_env

# safe_bestrefs should not receive updates from the server
export CRDS_SERVER_URL="https://crds-serverless-mode.stsci.edu"

# safe_bestrefs should not modify the cache.
export CRDS_READONLY_CACHE=1

# 180 seconds == 3 minute bestrefs timeout for failed locking or sync.
# --shared means bestrefs doesn't block bestrefs
# crds.config.lock means this locking only excludes unsafe_sync
( flock --shared --wait 180 200
  if [[ $? == 1 ]] 
  then
      echo "safe_bestrefs: WARNING: failed to obtain shared crds.config.lock"
  else
      echo "safe_bestrefs: INFO: obtained shared crds.config.lock"
  fi
  
  chmod 444 ${CRDS_PATH}/config/{hst,jwst}/* >& /dev/null 
  python -m crds.bestrefs $* --readonly-cache

) 200> ${CRDS_LOCKS}/crds.config.lock 

